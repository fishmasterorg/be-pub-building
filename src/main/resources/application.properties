server.port=8115

#
## Actuator ##
#
management.endpoints.enabled-by-default=false
management.endpoint.health.enabled=true
management.endpoints.web.exposure.include=health
#
## Cache Configuration ##
#
cache.expire-after-write-in-ms=86400000

cache.daily-task.expire-after-write-in-ms=15000
cache.exchanger-exchange.expire-after-write-in-ms=15000
cache.exchanger-offer.expire-after-write-in-ms=15000
cache.barman-offer.expire-after-write-in-ms=15000
#
## Pagination Configuration
#
pagination.building.pub.limit=500

pagination.building.pub.challenge.food.page=0
pagination.building.pub.challenge.food.size=10
#
## Scheduler ##
#
scheduler.thread-pool.size=16

scheduler.pub-building.task.daily.generate.cron=5 0 0 * * *

scheduler.pub-building.challenge.food.move-failed-to-history.cron=0 * * * * *
#
## Microservices data ##
#
ms.api.path=/api
### Account ###
ms.account.host=be-my-account
ms.account.port=8103
ms.account.uri=http://${ms.account.host}:${ms.account.port}

ms.account.path.get-by-param=${ms.api.path}/account

ms.account.timeout.connect=30000
ms.account.timeout.read=30000
### Character ###
ms.character.host=be-character
ms.character.port=8104
ms.character.uri=http://${ms.character.host}:${ms.character.port}

ms.character.path.character-fetch=${ms.api.path}/character/fetch
ms.character.path.character-exists=${ms.api.path}/character/exists

ms.character.path.character-status-lock=${ms.api.path}/character/status/lock
ms.character.path.character-status-complete=${ms.api.path}/character/status/complete
ms.character.path.character-status-rollback=${ms.api.path}/character/status/rollback

ms.character.path.character-energy-handle-operation=${ms.api.path}/character/energy/operation/handle

ms.character.path.character-experience-add=${ms.api.path}/character/experience/add

ms.character.timeout.connect=30000
ms.character.timeout.read=30000
### Configurations Storage ###
ms.configurations-storage.host=be-configurations-storage
ms.configurations-storage.port=8105
ms.configurations-storage.uri=http://${ms.configurations-storage.host}:${ms.configurations-storage.port}

ms.configurations-storage.path.configuration-state=${ms.api.path}/configuration/state

ms.configurations-storage.timeout.connect=30000
ms.configurations-storage.timeout.read=30000
### Account Balance ###
ms.account-balance.host=be-account-balance
ms.account-balance.port=8107
ms.account-balance.uri=http://${ms.account-balance.host}:${ms.account-balance.port}

ms.account-balance.path.handle-operation=${ms.api.path}/account/balance/operation/handle

ms.account-balance.timeout.connect=30000
ms.account-balance.timeout.read=30000
### City ###
ms.city.host=be-city
ms.city.port=8108
ms.city.uri=http://${ms.city.host}:${ms.city.port}

ms.city.path.city-fetch=${ms.api.path}/city/fetch

ms.city.timeout.connect=30000
ms.city.timeout.read=30000
### City Balance ###
ms.city-balance.host=be-city-balance
ms.city-balance.port=8109
ms.city-balance.uri=http://${ms.city-balance.host}:${ms.city-balance.port}

ms.city-balance.path.handle-operation=${ms.api.path}/city/balance/operation/handle
ms.city-balance.path.handle-operation-batch=${ms.api.path}/city/balance/operation/handle/batch

ms.city-balance.timeout.connect=30000
ms.city-balance.timeout.read=30000
### Card Inventory ###
ms.card-inventory.host=be-card-inventory
ms.card-inventory.port=8110
ms.card-inventory.uri=http://${ms.card-inventory.host}:${ms.card-inventory.port}

ms.card-inventory.path.card-fetch=${ms.api.path}/card/fetch

ms.card-inventory.path.account-card-create=${ms.api.path}/account/card
ms.card-inventory.path.account-card-lock=${ms.api.path}/account/card/lock
ms.card-inventory.path.account-card-lock-for-craft=${ms.api.path}/account/card/lock/craft
ms.card-inventory.path.account-card-complete=${ms.api.path}/account/card/complete
ms.card-inventory.path.account-card-rollback=${ms.api.path}/account/card/rollback

ms.card-inventory.timeout.connect=30000
ms.card-inventory.timeout.read=30000
#
## MongoDB configuration ##
#
mongodb.database=pub_building
mongodb.host=
mongodb.port=27017
mongodb.user=brewmaster
mongodb.password=BrewMaster!234
mongodb.maxPoolSize=100
mongodb.connectTimeoutMS=15000
mongodb.socketTimeoutMS=60000
mongodb.waitQueueMultiple=10
mongodb.waitQueueTimeoutMS=12000
mongodb.readPreference=primary
mongodb.credentials=${mongodb.user}:${mongodb.password}@

spring.data.mongodb.auto-index-creation=true
spring.data.mongodb.field-naming-strategy=org.springframework.data.mapping.model.SnakeCaseFieldNamingStrategy

spring.data.mongodb.uri=mongodb://${mongodb.credentials}${mongodb.host}:${mongodb.port}/${mongodb.database}\
  ?maxPoolSize=${mongodb.maxPoolSize}\
  &connectTimeoutMS=${mongodb.connectTimeoutMS}\
  &socketTimeoutMS=${mongodb.socketTimeoutMS}\
  &waitQueueMultiple=${mongodb.waitQueueMultiple}\
  &waitQueueTimeoutMS=${mongodb.waitQueueTimeoutMS}\
  &readPreference=${mongodb.readPreference}
#
## PostgreSQL Configuration ##
#
postgres.database=pub_building
postgres.host=
postgres.port=5432
postgres.user=user
postgres.password=password
postgres.maxPoolSize=100
postgres.reWriteBatchedInserts=true
postgres.stringtype=unspecified
postgres.connectTimeoutMS=15000
postgres.socketTimeoutMS=60000
postgres.serverTimezone=UTC
postgres.useUnicode=yes
postgres.characterEncoding=UTF-8

spring.jpa.properties.hibernate.jdbc.time_zone=UTC
spring.jpa.hibernate.ddl-auto=validate

spring.jpa.open-in-view=true

spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://${postgres.host}:${postgres.port}/${postgres.database}\
  ?user=${postgres.user}\
  &password=${postgres.password}\
  &stringtype=${postgres.stringtype}\
  &reWriteBatchedInserts=${postgres.reWriteBatchedInserts}\
  &maxPoolSize=${postgres.maxPoolSize}\
  &connectTimeoutMS=${postgres.connectTimeoutMS}\
  &socketTimeoutMS=${postgres.socketTimeoutMS}\
  &serverTimezone=${postgres.serverTimezone}\
  &useUnicode=${postgres.useUnicode}\
  &characterEncoding=${postgres.characterEncoding}
#
## Flyway ##
#
spring.flyway.enabled=true
spring.flyway.url=jdbc:postgresql://${postgres.host}:${postgres.port}/${postgres.database}
spring.flyway.user=${postgres.user}
spring.flyway.password=${postgres.password}
spring.flyway.mixed=true
#
## Kafka configuration ##
#
kafka.host=
kafka.port=9092
kafka.bootstrap-servers=${kafka.host}:${kafka.port}

kafka.config.group-id=pub-building-group-id
kafka.config.client-id=pub-building-client-id
kafka.config.enable-auto-commit=true

kafka.authentication.enable=true
kafka.authentication.sasl-mechanism=PLAIN
kafka.authentication.security-protocol-config=SASL_PLAINTEXT
kafka.authentication.username=
kafka.authentication.password=
kafka.authentication.sasl-jaas-config=org.apache.kafka.common.security.plain.PlainLoginModule required \
  username="${kafka.authentication.username}" \
  password="${kafka.authentication.password}";

kafka.topic.account-init=account-init
kafka.topic.account-remove=account-remove

kafka.topic.pub-building-daily-task-progress-refresh=pub-building-daily-task-progress-refresh
kafka.topic.pub-building-daily-task-outcome=pub-building-daily-task-outcome

kafka.topic.pub-building-trading-challenge-refresh=pub-building-trading-challenge-refresh

kafka.topic.service-cache-evict=service-cache-evict
kafka.topic.service-prepared-daily-tasks-reload=service-prepared-daily-tasks-reload

spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.kafka.KafkaAutoConfiguration
#
## RestTemplate ##
#
http.connection.pool.max-total=128
http.connection.pool.default-max-per-route=64
http.connection.pool.socket-timeout=30000
#
## Server gzip compression (works only for embedded tomcat)##
#
server.compression.enabled=true
server.compression.mime-types=application/json,application/xml,text/html,text/xml,text/plain,application/javascript,text/css
server.compression.min-response-size=4096